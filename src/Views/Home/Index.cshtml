@using System.Security.Claims
@{
    ViewData["Title"] = ViewData["Title"] ?? "Danh sách yêu cầu";
    var emp_id = User.FindFirst(ClaimTypes.NameIdentifier)?.Value
        ?? User.FindFirst("preferred_username")?.Value
        ?? User.FindFirst("upn")?.Value;

    var currentPath = ViewContext.RouteData.Values["action"]?.ToString()?.ToLower();
}

@model IEnumerable<HomeViewModel>

<form method="get" class="row gy-2 align-items-center mb-3" id="requestFilterForm">
    <div class="col-auto">
        <select class="form-select" name="TicketType" id="filterRequestType">
            <option value="">-- Loại yêu cầu --</option>
            @if (ViewBag.TicketTypes != null && ViewBag.TicketTypes is IEnumerable<HPDQ.WebSupport.DataEntitites.CodeDetail>)
            {
                foreach (var item in (ViewBag.TicketTypes as IEnumerable<HPDQ.WebSupport.DataEntitites.CodeDetail>)!)
                {
                    <option value="@item.Code">@item.Description</option>
                }
            }
        </select>
    </div>
    <div class="col-auto">
        <select class="form-select" name="TicketStatus" id="filterStatus">
            <option value="">-- Trạng thái --</option>
            @foreach (var item in Enum.GetValues<HPDQ.WebSupport.DataEntitites.TicketStatus>())
            {
                <option value="@((byte)item)">@item.GetDescription()</option>
            }
        </select>
    </div>
    <div class="col-auto">
        <input type="text" class="form-control" name="SearchText" id="filterRequestId" placeholder="Tìm theo nội dung yêu cầu">
    </div>
    <div class="col-auto">
        <button type="submit" class="btn btn-primary">
            <i class="bi bi-search"></i> Tìm kiếm
        </button>
        <a href="#" class="btn btn-secondary" onclick="clearfilter()">Xoá lọc</a>
    </div>
</form>

<div class="contentlist" id="contentlist">
    <table class="table table-bordered table-striped table-sm">
        <thead style="background-color: #D7E5F0;">
            <tr>
                <th style="width: 90px;">
                    Mã
                    <div class="filter-btn dropdown d-inline">
                        <button class="btn btn-link btn-sm dropdown-toggle p-0 ms-1" type="button" data-bs-toggle="dropdown" aria-expanded="false"></button>
                        <ul class="dropdown-menu">
                            <li>
                                <input type="text" class="form-control form-control-sm filter-input" data-column="0" placeholder="Lọc tiêu đề..." />
                            </li>
                        </ul>
                    </div>
                </th>
                <th style="width: 140px;">
                    Thời gian
                    <div class="filter-btn dropdown d-inline">
                        <button class="btn btn-link btn-sm dropdown-toggle p-0 ms-1" type="button" data-bs-toggle="dropdown" aria-expanded="false"></button>
                        <ul class="dropdown-menu">
                            <li>
                                <input type="text" class="form-control form-control-sm filter-input" data-column="1" placeholder="Lọc tiêu đề..." />
                            </li>
                        </ul>
                    </div>
                </th>
                <th style="width: 200px;">
                    Người yêu cầu
                    <div class="filter-btn dropdown d-inline">
                        <button class="btn btn-link btn-sm dropdown-toggle p-0 ms-1" type="button" data-bs-toggle="dropdown" aria-expanded="false"></button>
                        <ul class="dropdown-menu">
                            <li>
                                <input type="text" class="form-control form-control-sm filter-input" data-column="2" placeholder="Lọc tiêu đề..." />
                            </li>
                        </ul>
                    </div>
                </th>
                <th>
                    Tiêu đề
                    <div class="filter-btn dropdown d-inline">
                        <button class="btn btn-link btn-sm dropdown-toggle p-0 ms-1" type="button" data-bs-toggle="dropdown" aria-expanded="false"></button>
                        <ul class="dropdown-menu">
                            <li>
                                <input type="text" class="form-control form-control-sm filter-input" data-column="3" placeholder="Lọc tiêu đề..." />
                            </li>
                        </ul>
                    </div>
                </th>
                <th style="width: 150px;">
                    Loại yêu cầu
                    <div class="filter-btn dropdown d-inline">
                        <button class="btn btn-link btn-sm dropdown-toggle p-0 ms-1" type="button" data-bs-toggle="dropdown" aria-expanded="false"></button>
                        <ul class="dropdown-menu">
                            <li>
                                <select class="form-select filter-input" data-column="4" name="TicketType" id="filterRequestType">
                                    <option value="">-- Loại yêu cầu --</option>
                                    @if (ViewBag.TicketTypes != null && ViewBag.TicketTypes is IEnumerable<HPDQ.WebSupport.DataEntitites.CodeDetail>)
                                    {
                                        foreach (var item in (ViewBag.TicketTypes as IEnumerable<HPDQ.WebSupport.DataEntitites.CodeDetail>)!)
                                        {
                                            <option value="@item.Description">@item.Description</option>
                                        }
                                    }
                                </select>
                            </li>
                        </ul>
                    </div>
                </th>
                <th style="width: 200px;">
                    Người phụ trách
                    <div class="filter-btn dropdown d-inline">
                        <button class="btn btn-link btn-sm dropdown-toggle p-0 ms-1" type="button" data-bs-toggle="dropdown" aria-expanded="false"></button>
                        <ul class="dropdown-menu">
                            <li>
                                <input type="text" class="form-control form-control-sm filter-input" data-column="5" placeholder="Lọc tiêu đề..." />
                            </li>
                        </ul>
                    </div>
                </th>
                <th style="width: 120px;">
                    Trạng thái
                    <div class="filter-btn dropdown d-inline">
                        <button class="btn btn-link btn-sm dropdown-toggle p-0 ms-1" type="button" data-bs-toggle="dropdown" aria-expanded="false"></button>
                        <ul class="dropdown-menu">
                            <li>
                                <select class="form-select filter-input" data-column="6" name="TicketStatus" id="filterStatus">
                                    <option value="">-- Trạng thái --</option>
                                    @foreach (var item in Enum.GetValues<HPDQ.WebSupport.DataEntitites.TicketStatus>())
                                    {
                                        <option value="@(item.GetDescription())">@item.GetDescription()</option>
                                    }
                                </select>
                            </li>
                        </ul>
                    </div>
                </th>
                @if (currentPath == "index")
                {
                    <th style="width: 50px;"></th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var model in Model ?? new List<HomeViewModel>())
            {
                <tr class="item" tag="@(model.Id)" tagEMP_ID="@(model.EMP_ID)" tagStatus="@((byte)model.Status)">
                    <td><b>#@(model.Code)</b></td>
                    <td>@(model.CreatedOn.ToString("HH:mm dd/MM/yyyy"))</td>
                    <td>@(model.FullName)</td>
                    <td class="title-cell">@Html.Raw(model.Title)</td>
                    <td>@Html.Raw(model.TypeDescription)</td>
                    <td>@Html.Raw(model.ProgressByEMPFullName)</td>
                    <td class="text-center">
                        <span style="padding: 0.5em 0.65em;" class="badge
                                @(model.Status == HPDQ.WebSupport.DataEntitites.TicketStatus.New ? "bg-primary" : "")
                                @(model.Status == HPDQ.WebSupport.DataEntitites.TicketStatus.InProgress ? "bg-warning text-dark" : "")
                                @(model.Status == HPDQ.WebSupport.DataEntitites.TicketStatus.Done ? "bg-success" : "")
                                @(model.Status == HPDQ.WebSupport.DataEntitites.TicketStatus.Closed ? "bg-secondary" : "")">
                            @(model.Status.GetDescription())
                        </span>
                    </td>
                    @if (currentPath == "index" && model.Status == HPDQ.WebSupport.DataEntitites.TicketStatus.New)
                    {
                        <td class="text-center editbuttonzone">
                            <img src="~/img/edit.png" class="edit-btn" tag='@(model.Id)' />
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
</div>


<!-- Modal -->
<div class="modal fade" id="dialogModal" tabindex="-1" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-fullscreen">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="myModalLabel">CHI TIẾT YÊU CẦU</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" style="overflow-y: hidden;">
                <input id="modelTag" type="hidden" />

                <div id="requestDetailModal" class="wrapper">
                    <div id="chatbox" class="content contentlist card">
                    </div>
                    <div class="card wrapperfooter">
                        <div style="min-height: 20px;">
                            <div id="divprocessby" style="display: none;">
                                <table>
                                    <tr>
                                        <td style="font-weight: bold;">Nhân sự xử lý: </td>
                                        <td>
                                            <label id="lblempprocessbyname" style="color: mediumblue; cursor: pointer;"></label>
                                        </td>
                                    </tr>
                                </table>
                            </div>
                        </div>
                        <div style="text-align: left;">
                            <table>
                                <tr>
                                    <td class="footertitle">Thông tin phản hồi</td>
                                    <td style="white-space: nowrap;">
                                        <div id="divattachment"></div>
                                        <img id="imgattachment" src="/img/attachment.png" />
                                    </td>
                                    <td class="footerfuncbutton">
                                        <span id="lblclose" class="function">Đóng</span>
                                        <span id="lblcomplete" class="function">Hoàn thành</span>
                                        <span id="lbdelegate" class="function">Phân công</span>
                                        <span id="lblaccept" class="function">Tiếp nhận</span>
                                        <span id="lblattach"><i class="fa-solid fa-paperclip"></i> Đính kèm</span>
                                        <input id="fileinput" type="file" multiple style="display: none;" />
                                    </td>
                                </tr>
                            </table>
                        </div>
                        <div>
                            <table>
                                <tr>
                                    <td style="width: 100%;">
                                        <div id="txtdescription" rows="3" contenteditable="true"></div>
                                    </td>
                                    <td style="white-space: nowrap;">
                                        <div>
                                            <input id="btnconfirm" type="button" value="Gửi" />
                                        </div>
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="dialogModalImage" tabindex="-1" aria-labelledby="myModalLabelImage" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content" style="max-height: calc(100vh - 150px); overflow-y: auto;">
            <div class="modal-header">
                <h5 class="modal-title" id="myModalLabelImage">HÌNH ẢNH ĐÍNH KÈM</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" style="overflow-y: auto;">
            </div>
        </div>
    </div>
</div>

@* Dialog xem trước các file đính kèm *@
<div class="modal fade" id="filePreviewModal" tabindex="-1" aria-labelledby="myModalFilePreview" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-xl custom-modal-90">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="myModalFilePreview">TẬP TIN ĐÍNH KÈM</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" style="width: 100%; height: 100%;">
                <iframe id="filePreviewFrame" style="width: 100%; height: 100%;"></iframe>
            </div>
        </div>
    </div>
</div>

@* Dialog xem trước các file đính kèm *@
<div class="modal fade" id="delegationModal" tabindex="-1" aria-labelledby="myDelegation" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="myDelegation">PHÂN CÔNG</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" style="width: 100%; height: 100%;">
                Nhân sự tiếp nhận: <select id='cboemployee' class="form-select"></select>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                <button type="button" class="btn btn-primary">Xác nhận</button>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <link rel="stylesheet" href="~/css/contenteditable.css" />
    <link rel="stylesheet" href="~/css/home.css" />
}
@section Scripts {
    <script src="~/js/fileinput.js"></script>
    <script src="~/js/contenteditable.js"></script>
    <script src="~/js/ajaxutil.js"></script>
    <script type="text/javascript">
        function formatDateTime(input) {
            // Normalize to 3-digit milliseconds if needed
            const fixedInput = input.replace(/(\.\d{1,2})(?!\d)/, (match) => {
                return match.padEnd(4, '0'); // e.g., ".17" → ".170"
            });

            const date = new Date(fixedInput);

            if (isNaN(date)) return "Invalid date";

            const pad = n => n.toString().padStart(2, '0');

            const hours = pad(date.getHours());
            const minutes = pad(date.getMinutes());
            const day = pad(date.getDate());
            const month = pad(date.getMonth() + 1); // months are 0-based
            const year = date.getFullYear();

            return `${hours}:${minutes} ${day}/${month}/${year}`;
        }
        function clearfilter() {
            $('#filterRequestType').val('');
            $('#filterStatus').val('');
            $('#filterRequestId').val('');
            $('#requestFilterForm').submit();
        }
        // Hàm Loaded
        $(function () {
            $('#contentlist .item').click(function () {
                if ($(this).attr('tagEMP_ID') != '@emp_id' && $(this).attr('tagStatus') == '1') $('#lblcomplete').show();
                else $('#lblcomplete').hide();
                if ($(this).attr('tagEMP_ID') == '@emp_id' && ($(this).attr('tagStatus') == '0' || $(this).attr('tagStatus') == '2')) $('#lblclose').show();
                else $('#lblclose').hide();
                $('#divprocessby').hide();
                function loadImages() {
                    $('.content.contentlist div.item').each(function(index, element) {
                        var className = $(`.content.contentlist div.item:eq(${index}) div.corner-label`).attr('class');
                        var bodydata;
                        if (index == 0) {
                            bodydata = {
                                ticketId: $(this).attr('tagId')
                            };
                        } else {
                            bodydata = {
                                commentId: $(this).attr('tagId')
                            };
                        }
                        postData('@HPDQ.WebSupport.Utilities.Globals.DomainAPIUrl/Attachments/Load', '@HPDQ.WebSupport.Utilities.Globals.APIKey', bodydata, function(response) {
                            if (response.data.length > 0) {
                                $(`.content.contentlist div.item:eq(${index}) div.corner-label`).attr('class', className.replace(' disabled', ''));
                                var itemcontainer = $('<div class="itemcontainer"></div>');
                                $(`.content.contentlist div.item:eq(${index})`).append(itemcontainer);
                                var others = [];
                                $.each(response.data, function(index, value) {
                                    if (!/\.jpe?g$|\.png$/i.test(value.fileName)) {
                                        others.push(value.fileName);
                                        return true;
                                    }
                                    getData(`@HPDQ.WebSupport.Utilities.Globals.DomainAPIUrl/Upload/Get/${value.fileName}`, '@HPDQ.WebSupport.Utilities.Globals.APIKey', function(response) {
                                        itemcontainer.append(`<img src="data:image/png;base64,${response.data}" />`);
                                    });
                                });
                                if (others && others.length > 0)
                                {
                                    itemcontainer = $('<div class="itemcontainer"></div>');
                                    $(`.content.contentlist div.item:eq(${index})`).append(itemcontainer);
                                    $.each(others, function(index, value) {
                                        itemcontainer.append(`<div class='filehref' onclick='openfile("@HPDQ.WebSupport.Utilities.Globals.DomainAPIUrl/Upload/GetFile/${value}")'>${value}</div>`);
                                    });
                                }
                            }
                        });
                    });
                }
                function loadComments(bodydata, progressbyempid) {
                    postData('@HPDQ.WebSupport.Utilities.Globals.DomainAPIUrl/Comments/Load', '@HPDQ.WebSupport.Utilities.Globals.APIKey', bodydata, function(response) {
                        if (response.errorCode != 0)
                        {
                            window.location.href = '/Home/Index';
                            return;
                        }
                        $.each(response.data, function(index, value) {
                            var className = 'item';
                            if (value.emp_id != '@emp_id') {
                                className = 'item reply';
                            }
                            $('.content.contentlist').append(`<div class="${className}" tagId="${value.id}">
                                <div class="card-title text-muted small">[${formatDateTime(value.createdOn)}] ${value.fullName}</div>
                                <div class="text-container">${value.commentDesc}<div class="corner-label disabled" onclick="showImagePopup(this, false)">Đính kèm</div></div>
                            </div>`);
                        });
                        loadImages();
                        var dialogModal = new bootstrap.Modal(document.getElementById('dialogModal'));
                        $('#txtdescription').html('');
                        if (progressbyempid && progressbyempid != '') {
                            $('#divprocessby').show();
                            $('#lblempprocessbyname').html(progressbyempid);
                        }
                        dialogModal.show();
                    });
                }
                var bodydata = {
                    id: $(this).attr('tag')
                };
                postData('@HPDQ.WebSupport.Utilities.Globals.DomainAPIUrl/Tickets/Load', '@HPDQ.WebSupport.Utilities.Globals.APIKey', bodydata, function(response) {
                    if (response.errorCode != 0)
                    {
                        window.location.href = '/Home/Index';
                        return;
                    }
                    $('.content.contentlist').html('');
                    var className = 'item';
                    if (response.data[0].emp_id != '@emp_id') {
                        className = 'item reply';
                    }
                    $('.content.contentlist').append(`<div class="${className}" tagId="${response.data[0].id}">
                        <div class="card-title text-muted small">[${formatDateTime(response.data[0].createdOn)}] ${response.data[0].fullName}</div>
                        <div class="text-container">${response.data[0].description}<div class="corner-label disabled" onclick="showImagePopup(this, true)">Đính kèm</div></div>
                    </div>`);
                    $('#modelTag').val(bodydata.id);

                    bodydata = {
                        ticketId: $('#modelTag').val()
                    };
                    loadComments(bodydata, response.data[0].progressByEMPFullName);
                });
            });
            $('#btnconfirm').click(function () {
                var desc = $('#txtdescription').html();
                if (!desc || desc == '') return;

                var uploadCompleted = false;
                var files;

                var uploadVal = uploadFileInputs('@HPDQ.WebSupport.Utilities.Globals.DomainAPIUrl/Upload/Upload', '@HPDQ.WebSupport.Utilities.Globals.APIKey', uploadCompleted, files);
                uploadCompleted = uploadVal.uploadCompleted;
                files = uploadVal.files;
                if (uploadCompleted == false) {
                    alert(uploadVal.message);
                    return;
                }

                if (uploadCompleted == false) return;

                var bodydata = {
                    emp_id: '@emp_id',
                    commentDesc: desc,
                    ticketId: $('#modelTag').val(),
                    files: files,
                    fullName: '@Html.Raw(User.FindFirst(ClaimTypes.GivenName)?.Value)'
                };
                postData('@HPDQ.WebSupport.Utilities.Globals.DomainAPIUrl/Comments/Create', '@HPDQ.WebSupport.Utilities.Globals.APIKey', bodydata, function(response) {
                    if (response.errorCode != 0)
                    {
                        alert(response.message);
                        return;
                    }
                    var className = 'item';
                    if (response.data.emp_id != '@emp_id') {
                        className = 'item reply';
                    }
                    $('.content.contentlist').append(`<div class="${className}">
                        <div class="card-title text-muted small">[@DateTime.Now.ToString("HH:mm dd/MM/yyyy")] ${response.data.fullName}</div>
                        <div class="text-container">${response.data.commentDesc}<div class="corner-label">Đính kèm</div></div>
                    </div>`);

                    $('#fileinput').val('');
                    formData = new FormData();
                    $('#divattachment').html(formDataFileLength());
                    $('#txtdescription').html('');
                });
            });
            initFileInput();
            if ('@ViewBag.Type' == '1') {
                function acceptTicket(emp_id, fullName) {
                    var bodydata = {
                        id: $('#modelTag').val(),
                        status: 1,
                        progressBy_EMP_ID: emp_id,
                        progressByEMPFullName: fullName,
                    };
                    postData('@HPDQ.WebSupport.Utilities.Globals.DomainAPIUrl/Tickets/Update?emp_id=@emp_id', '@HPDQ.WebSupport.Utilities.Globals.APIKey', bodydata, function(response) {
                        if (response.errorCode != 0)
                        {
                            alert(response.message);
                            return;
                        }
                        location.reload();
                    });
                }
                $('#lblaccept').on('click', function () {
                    acceptTicket('@emp_id', '@User.FindFirst(ClaimTypes.GivenName)?.Value');
                });
                $('#lblaccept').show();
                $('#delegationModal .btn.btn-primary').click(function () {
                    acceptTicket($('#cboemployee').val(), $('#cboemployee option:selected').text());
                });
                $('#lbdelegate').on('click', function () {
                    var optionElements = $('#cboemployee').find('option');
                    if (!(optionElements.length > 0)) {
                        getData('@HPDQ.WebSupport.Utilities.Globals.DomainAPIUrl/Upload/LoadEmployees', '@HPDQ.WebSupport.Utilities.Globals.APIKey', function(response) {
                            if (response && response.length > 0) {
                                var employee = response.find(e => e.maNV === '@emp_id');
                                if (employee && employee.is_lead) {
                                    var results = $.grep(response, function(e) { 
                                        return e.job_group === employee.job_group;
                                    });
                                    $.each(results, function(index, value) {
                                        $('#cboemployee').append(`<option value="${value.maNV}">${value.hoTen}</option>`);
                                    });
                                }
                            }
                        });
                    }
                    var delegationModal = new bootstrap.Modal(document.getElementById('delegationModal'), { backdrop: true, keyboard: true });
                    delegationModal.show();
                });
                $('#lbdelegate').show();
            }
            $('#lblcomplete').on('click', function () {
                var bodydata = {
                    id: $('#modelTag').val(),
                    status: 2,
                };
                postData('@HPDQ.WebSupport.Utilities.Globals.DomainAPIUrl/Tickets/Update?emp_id=@emp_id', '@HPDQ.WebSupport.Utilities.Globals.APIKey', bodydata, function(response) {
                    if (response.errorCode != 0)
                    {
                        alert(response.message);
                        return;
                    }
                    location.reload();
                });
            });
            $('#lblclose').on('click', function () {
                var bodydata = {
                    id: $('#modelTag').val(),
                    status: 3,
                };
                postData('@HPDQ.WebSupport.Utilities.Globals.DomainAPIUrl/Tickets/Update?emp_id=@emp_id', '@HPDQ.WebSupport.Utilities.Globals.APIKey', bodydata, function(response) {
                    if (response.errorCode != 0)
                    {
                        alert(response.message);
                        return;
                    }
                    location.reload();
                });
            });
            document.getElementById('dialogModal').addEventListener('shown.bs.modal', function () {
                var scrollDiv = $('#chatbox');
                scrollDiv.animate({
                  scrollTop: scrollDiv.prop("scrollHeight")
                }, 1000); // 1000ms = 1 giây
                // scrollDiv.scrollTop(scrollDiv.prop("scrollHeight"));
            });
            $('#dialogModal').on('hidden.bs.modal', function () {
                $('#fileinput').val('');
                formData = new FormData();
                $('#divattachment').html(formDataFileLength());
                $('#txtdescription').html('');
            });
            document.getElementById('dialogModalImage').addEventListener('shown.bs.modal', function () {
                this.focus();
            });
            $('#dialogModalImage').on('hidden.bs.modal', function (e) {
                $('#dialogModal').focus();
            });
            document.getElementById('delegationModal').addEventListener('shown.bs.modal', function () {
                this.focus();
            });
            $('#delegationModal').on('hidden.bs.modal', function (e) {
                $('#dialogModal').focus();
            });
            
            const urlParams = new URLSearchParams(window.location.search);
            const tickettype = urlParams.get('TicketType');
            const ticketstatus = urlParams.get('TicketStatus');
            const searchtext = urlParams.get('SearchText');
            if (tickettype && tickettype != null && tickettype != '') {
                $('#filterRequestType').val(tickettype);
            }
            if (ticketstatus && ticketstatus != null && ticketstatus != '') {
                $('#filterStatus').val(ticketstatus);
            }
            if (searchtext && searchtext != null && searchtext != '') {
                $('#filterRequestId').val(searchtext);
            }

            $('.item-list').show();

            document.getElementById('filePreviewModal').addEventListener('shown.bs.modal', function () {
                this.focus();
            });
            $('#filePreviewModal').on('hidden.bs.modal', function () {
                var iframe = document.getElementById("filePreviewFrame");
                iframe.src = ""; // Xóa src để giải phóng bộ nhớ
                $('#dialogModal').focus();
            });
            $('.editbuttonzone img').on('click', function(event) {
                // Prevent the default paste behavior (which might insert a large image)
                event.preventDefault();
                var href = '@Url.Action("EditTicket", "Home", new { id = "ID_PLACEHOLDER" })';
                window.location.href = href.replace('ID_PLACEHOLDER', $(this).attr('tag'));
                return false;
            });
        });
        // Hàm Loaded
        function showImagePopup(element, isTicket) {
            var elclass = $(element).attr('class');
            if (elclass.includes('disabled')) return;
            $('#dialogModalImage div.modal-body').html('');
            var bodydata;
            if (isTicket) {
                bodydata = {
                    ticketId: $(element.parentElement.parentElement).attr('tagid')
                };
            } else {
                bodydata = {
                    commentId: $(element.parentElement.parentElement).attr('tagid')
                };
            }
            postData('@HPDQ.WebSupport.Utilities.Globals.DomainAPIUrl/Attachments/Load', '@HPDQ.WebSupport.Utilities.Globals.APIKey', bodydata, function(response) {
                if (response.data.length > 0) {
                    $.each(response.data, function(index, value) {
                        if (!/\.jpe?g$|\.png$/i.test(value.fileName)) {
                            return true;
                        }
                        getData(`@HPDQ.WebSupport.Utilities.Globals.DomainAPIUrl/Upload/Get/${value.fileName}`, '@HPDQ.WebSupport.Utilities.Globals.APIKey', function(response) {
                            $('#dialogModalImage div.modal-body').append(`<div><img src="data:image/png;base64,${response.data}" /></div>`);
                            $('#dialogModalImage').focus();
                        });
                    });
                }
            });
            var dialogModalImage = new bootstrap.Modal(document.getElementById('dialogModalImage'), { backdrop: true, keyboard: true });
            dialogModalImage.show();
        }
        function openfile(fileurl) {
            var iframe = document.getElementById("filePreviewFrame");
            iframe.src = fileurl;

            var filePreviewModal = new bootstrap.Modal(document.getElementById('filePreviewModal'), { backdrop: true, keyboard: true });
            filePreviewModal.show();
        }

        $('.filter-input').on('input change', function() {
            var dropdownMenu = $(this).closest('.dropdown-menu');
            var filterBtn = dropdownMenu.siblings('button');
            var hasValue = $(this).val() && $(this).val().trim() !== '';

            if (hasValue) {
                filterBtn.closest('.filter-btn').addClass('active');
            } else {
                var allEmpty = true;
                dropdownMenu.find('.filter-input').each(function() {
                    if ($(this).val() && $(this).val().trim() !== '') {
                        allEmpty = false;
                    }
                });
                if (allEmpty) {
                    filterBtn.closest('.filter-btn').removeClass('active');
                }
            }

            var filters = [];
            $('.filter-input').each(function() {
                filters[$(this).data('column')] = $(this).val().toLowerCase();
            });

            $('tbody tr').each(function() {
                var isMatch = true;
                $(this).find('td').each(function(idx) {
                    var filterVal = filters[idx];
                    if (filterVal && filterVal.length > 0) {
                        var cellText = $(this).text().toLowerCase();
                        if (cellText.indexOf(filterVal) === -1) {
                            isMatch = false;
                        }
                    }
                });
                $(this).toggle(isMatch);
            });
        });

    </script>
}